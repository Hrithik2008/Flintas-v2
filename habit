import React, { useState, useRef, useEffect } from 'react';
import {
  View,
  Text,
  ScrollView,
  StyleSheet,
  TouchableOpacity,
  Image,
  FlatList,
  Animated,
  Modal,
  TextInput,
  Button,
} from 'react-native';

const HabitsScreen = ({ navigation }) => {
  const [scrollOffset, setScrollOffset] = useState(0);
  const [showCreateModal, setShowCreateModal] = useState(false);
  const [newHabitName, setNewHabitName] = useState('');
  const fabAnim = useRef(new Animated.Value(0)).current;

  const demoHabits = [
    { name: 'Morning Run', category: 'Fitness', icon: '🏃', color: '#6C63FF', progress: 0.8 },
    { name: 'Read 20 Pages', category: 'Learning', icon: '📖', color: '#4FD1C5', progress: 0.65 },
    { name: 'Meditation', category: 'Mindfulness', icon: '🧘', color: '#F6AD55', progress: 0.9 },
    { name: 'Water Intake', category: 'Health', icon: '💧', color: '#4299E1', progress: 0.75 },
  ];

  useEffect(() => {
    Animated.timing(fabAnim, {
      toValue: 1,
      duration: 300,
      useNativeDriver: true,
    }).start();
  }, []);

  const handleScroll = (event) => {
    setScrollOffset(event.nativeEvent.contentOffset.y);
  };

  const renderHabitItem = ({ item }) => (
    <TouchableOpacity
      style={styles.habitItem}
      onPress={() => navigation.navigate('HabitDetails', { habit: item })}
    >
      <View style={styles.habitHeader}>
        <View style={[styles.habitIcon, { backgroundColor: `${item.color}20` }]}>
          <Text>{item.icon}</Text>
        </View>
        <View style={styles.progressCircle}>
          <Text style={styles.progressText}>{Math.round(item.progress * 100)}%</Text>
        </View>
      </View>
      <Text style={styles.habitName}>{item.name}</Text>
      <Text style={styles.habitCategory}>{item.category}</Text>
      <View style={styles.progressBar}>
        <View style={[styles.progressFill, { width: `${item.progress * 100}%`, backgroundColor: item.color }]} />
      </View>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <ScrollView
        onScroll={handleScroll}
        scrollEventThrottle={16}
        contentContainerStyle={styles.scrollContent}
      >
        <View style={styles.header}>
          <Text style={styles.headerTitle}>Habit Tracker</Text>
          <Text style={styles.headerSubtitle}>Build routines that stick</Text>
        </View>

        <View style={styles.streakCard}>
          <View style={styles.streakContent}>
            <Text style={styles.streakLabel}>Current Streak</Text>
            <Text style={styles.streakValue}>12 days</Text>
            <TouchableOpacity style={styles.streakButton}>
              <Text style={styles.streakButtonText}>View Stats</Text>
            </TouchableOpacity>
          </View>
          <Text style={styles.fireEmoji}>🔥</Text>
        </View>

        <FlatList
          data={demoHabits}
          renderItem={renderHabitItem}
          keyExtractor={(item) => item.name}
          numColumns={2}
          scrollEnabled={false}
          contentContainerStyle={styles.habitsGrid}
        />
      </ScrollView>

      <Animated.View
        style={[
          styles.fabContainer,
          {
            transform: [
              {
                scale: fabAnim.interpolate({
                  inputRange: [0, 1],
                  outputRange: [0.5, 1],
                }),
              },
            ],
          },
        ]}
      >
        <TouchableOpacity
          style={styles.fab}
          onPress={() => setShowCreateModal(true)}
        >
          <Text style={styles.fabIcon}>+</Text>
          <Text style={styles.fabText}>New Habit</Text>
        </TouchableOpacity>
      </Animated.View>

      <Modal
        visible={showCreateModal}
        animationType="slide"
        transparent
        onRequestClose={() => setShowCreateModal(false)}
      >
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            <View style={styles.modalHandle} />
            <Text style={styles.modalTitle}>Create New Habit</Text>
            <TextInput
              style={styles.input}
              placeholder="Habit Name"
              value={newHabitName}
              onChangeText={setNewHabitName}
            />
            <Text style={styles.sectionLabel}>Category</Text>
            <View style={styles.categoryContainer}>
              {['Fitness', 'Learning', 'Mindfulness', 'Health'].map((category) => (
                <TouchableOpacity key={category} style={styles.categoryPill}>
                  <Text>{category}</Text>
                </TouchableOpacity>
              ))}
            </View>
            <Text style={styles.sectionLabel}>Frequency</Text>
            <View style={styles.frequencyContainer}>
              {['Daily', 'Weekly', 'Monthly'].map((freq) => (
                <TouchableOpacity key={freq} style={styles.frequencyPill}>
                  <Text>{freq}</Text>
                </TouchableOpacity>
              ))}
            </View>
            <TouchableOpacity style={styles.createButton}>
              <Text style={styles.createButtonText}>Create Habit</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  scrollContent: {
    paddingBottom: 100,
  },
  header: {
    padding: 24,
    paddingBottom: 16,
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: '800',
  },
  headerSubtitle: {
    fontSize: 16,
    color: '#666',
    marginTop: 8,
  },
  streakCard: {
    marginHorizontal: 24,
    marginVertical: 16,
    padding: 20,
    borderRadius: 20,
    backgroundColor: '#6C63FF',
    flexDirection: 'row',
    alignItems: 'center',
  },
  streakContent: {
    flex: 1,
  },
  streakLabel: {
    color: 'rgba(255,255,255,0.9)',
    fontSize: 14,
  },
  streakValue: {
    color: '#fff',
    fontSize: 24,
    fontWeight: '800',
    marginTop: 4,
  },
  streakButton: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 10,
    marginTop: 12,
    alignSelf: 'flex-start',
  },
  streakButtonText: {
    color: '#6C63FF',
    fontWeight: '600',
  },
  fireEmoji: {
    fontSize: 40,
  },
  habitsGrid: {
    paddingHorizontal: 24,
    paddingTop: 16,
  },
  habitItem: {
    flex: 1,
    margin: 8,
    padding: 16,
    borderRadius: 16,
    backgroundColor: '#fff',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  habitHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  habitIcon: {
    width: 40,
    height: 40,
    borderRadius: 12,
    justifyContent: 'center',
    alignItems: 'center',
  },
  progressCircle: {
    width: 32,
    height: 32,
    borderRadius: 16,
    borderWidth: 2,
    borderColor: '#eee',
    justifyContent: 'center',
    alignItems: 'center',
  },
  progressText: {
    fontSize: 10,
    fontWeight: '600',
  },
  habitName: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 4,
  },
  habitCategory: {
    fontSize: 12,
    color: '#666',
    marginBottom: 8,
  },
  progressBar: {
    height: 6,
    borderRadius: 3,
    backgroundColor: '#eee',
    overflow: 'hidden',
  },
  progressFill: {
    height: '100%',
  },
  fabContainer: {
    position: 'absolute',
    bottom: 24,
    right: 24,
  },
  fab: {
    backgroundColor: '#6C63FF',
    borderRadius: 16,
    paddingHorizontal: 20,
    paddingVertical: 12,
    flexDirection: 'row',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 4,
    elevation: 4,
  },
  fabIcon: {
    color: '#fff',
    fontSize: 20,
    marginRight: 8,
  },
  fabText: {
    color: '#fff',
    fontWeight: '600',
  },
  modalContainer: {
    flex: 1,
    backgroundColor: 'rgba(0,0,0,0.5)',
    justifyContent: 'flex-end',
  },
  modalContent: {
    backgroundColor: '#fff',
    borderTopLeftRadius: 24,
    borderTopRightRadius: 24,
    padding: 24,
    paddingBottom: 40,
    maxHeight: '80%',
  },
  modalHandle: {
    width: 40,
    height: 4,
    backgroundColor: '#ddd',
    borderRadius: 2,
    alignSelf: 'center',
    marginBottom: 16,
  },
  modalTitle: {
    fontSize: 20,
    fontWeight: '700',
    marginBottom: 24,
    textAlign: 'center',
  },
  input: {
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 8,
    padding: 12,
    marginBottom: 24,
  },
  sectionLabel: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 12,
  },
  categoryContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginBottom: 24,
  },
  categoryPill: {
    backgroundColor: '#eee',
    borderRadius: 16,
    paddingHorizontal: 16,
    paddingVertical: 8,
    marginRight: 8,
    marginBottom: 8,
  },
  frequencyContainer: {
    flexDirection: 'row',
    marginBottom: 24,
  },
  frequencyPill: {
    backgroundColor: '#eee',
    borderRadius: 16,
    paddingHorizontal: 16,
    paddingVertical: 8,
    marginRight: 8,
  },
  createButton: {
    backgroundColor: '#6C63FF',
    borderRadius: 12,
    padding: 16,
    alignItems: 'center',
  },
  createButtonText: {
    color: '#fff',
    fontWeight: '600',
  },
});

export default HabitsScreen;